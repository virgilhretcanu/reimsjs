{"ts":1357667528898,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1357667540450,"patch":[[{"diffs":[[1,"var Db = require('mongodb').Db;\r\nvar Connection = require('mongodb').Connection;\r\nvar Server = require('mongodb').Server;\r\nvar BSON = require('mongodb').BSON;\r\nvar ObjectID = require('mongodb').ObjectID;\r\n\r\nArticleProvider = function(host, port) {\r\n  this.db= new Db('node-mongo-blog', new Server(host, port, {auto_reconnect: true}, {}));\r\n  this.db.open(function(){});\r\n};\r\n\r\n//getCollection\r\n\r\nArticleProvider.prototype.getCollection= function(callback) {\r\n  this.db.collection('articles', function(error, article_collection) {\r\n    if( error ) callback(error);\r\n    else callback(null, article_collection);\r\n  });\r\n};\r\n\r\n//findAll\r\nArticleProvider.prototype.findAll = function(callback) {\r\n    this.getCollection(function(error, article_collection) {\r\n      if( error ) callback(error)\r\n      else {\r\n        article_collection.find().toArray(function(error, results) {\r\n          if( error ) callback(error)\r\n          else callback(null, results)\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n//findById\r\n\r\nArticleProvider.prototype.findById = function(id, callback) {\r\n    this.getCollection(function(error, article_collection) {\r\n      if( error ) callback(error)\r\n      else {\r\n        article_collection.findOne({_id: article_collection.db.bson_serializer.ObjectID.createFromHexString(id)}, function(error, result) {\r\n          if( error ) callback(error)\r\n          else callback(null, result)\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n//save\r\nArticleProvider.prototype.save = function(articles, callback) {\r\n    this.getCollection(function(error, article_collection) {\r\n      if( error ) callback(error)\r\n      else {\r\n        if( typeof(articles.length)==\"undefined\")\r\n          articles = [articles];\r\n\r\n        for( var i =0;i< articles.length;i++ ) {\r\n          article = articles[i];\r\n          article.created_at = new Date();\r\n          if( article.comments === undefined ) article.comments = [];\r\n          for(var j =0;j< article.comments.length; j++) {\r\n            article.comments[j].created_at = new Date();\r\n          }\r\n        }\r\n\r\n        article_collection.insert(articles, function() {\r\n          callback(null, articles);\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\nexports.ArticleProvider = ArticleProvider;"]],"start1":0,"start2":0,"length1":0,"length2":2221}]],"length":2221,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357667817792,"patch":[[{"diffs":[[0,"tID;\r\n\r\n"],[-1,"ArticleProvider"],[1,"Inventory"],[0," = funct"]],"start1":199,"start2":199,"length1":31,"length2":25}]],"length":2215,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357700551855,"patch":[[{"diffs":[[-1,"var Db = require('mongodb').Db;\r\nvar Connection = require('mongodb').Connection;\r\nvar Server = require('mongodb').Server;\r\nvar BSON = require('mongodb').BSON;\r\nvar ObjectID = require('mongodb').ObjectID;\r\n\r\nInventory = function(host, port) {\r\n  this.db= new Db('node-mongo-blog', new Server(host, port, {auto_reconnect: true}, {}));\r\n  this.db.open(function(){});\r\n};\r\n\r\n//getCollection\r\n\r\nArticleProvider.prototype.getCollection= function(callback) {\r\n  this.db.collection('articles', function(error, article_collection) {\r\n    if( error ) callback(error);\r\n    else callback(null, article_collection);\r\n  });\r\n};\r\n\r\n//findAll\r\nArticleProvider.prototype.findAll = function(callback) {\r\n    this.getCollection(function(error, article_collection) {\r\n      if( error ) callback(error)\r\n      else {\r\n        article_collection.find().toArray(function(error, results) {\r\n          if( error ) callback(error)\r\n          else callback(null, results)\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n//findById\r\n\r\nArticleProvider.prototype.findById = function(id, callback) {\r\n    this.getCollection(function(error, article_collection) {\r\n      if( error ) callback(error)\r\n      else {\r\n        article_collection.findOne({_id: article_collection.db.bson_serializer.ObjectID.createFromHexString(id)}, function(error, result) {\r\n          if( error ) callback(error)\r\n          else callback(null, result)\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\n//save\r\nArticleProvider.prototype.save = function(articles, callback) {\r\n    this.getCollection(function(error, article_collection) {\r\n      if( error ) callback(error)\r\n      else {\r\n        if( typeof(articles.length)==\"undefined\")\r\n          articles = [articles];\r\n\r\n        for( var i =0;i< articles.length;i++ ) {\r\n          article = articles[i];\r\n          article.created_at = new Date();\r\n          if( article.comments === undefined ) article.comments = [];\r\n          for(var j =0;j< article.comments.length; j++) {\r\n            article.comments[j].created_at = new Date();\r\n          }\r\n        }\r\n\r\n        article_collection.insert(articles, function() {\r\n          callback(null, articles);\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\nexports.ArticleProvider = ArticleProvider;"]],"start1":0,"start2":0,"length1":2215,"length2":0}]],"length":0,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357705112152,"patch":[[{"diffs":[[1,"var express = require('express'),\r\n    stylus = require('stylus');\r\n    \r\napp.get('/invadd', function(req, res){\r\n  console.log(\"Hello from adding to inventory\")\r\n});    "]],"start1":0,"start2":0,"length1":0,"length2":170}]],"length":170,"saved":false}

{"ts":1359853566964,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/*!\n * Connect - methodOverride\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Method Override:\n * \n * Provides faux HTTP method support.\n * \n * Pass an optional `key` to use when checking for\n * a method override, othewise defaults to _\\_method_.\n * The original method is available via `req.originalMethod`.\n *\n * @param {String} key\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function methodOverride(key){\n  key = key || \"_method\";\n  return function methodOverride(req, res, next) {\n    req.originalMethod = req.originalMethod || req.method;\n\n    // req.body\n    if (req.body && key in req.body) {\n      req.method = req.body[key].toUpperCase();\n      delete req.body[key];\n    // check X-HTTP-Method-Override\n    } else if (req.headers['x-http-method-override']) {\n      req.method = req.headers['x-http-method-override'].toUpperCase();\n    }\n    \n    next();\n  };\n};\n\n"]],"start1":0,"start2":0,"length1":0,"length2":940}]],"length":940}
